<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jiasen.dao.EmployeeMapper">
  <resultMap id="BaseResultMap" type="com.jiasen.bean.Employee">
    <id column="e_id" jdbcType="INTEGER" property="eId" />
    <result column="e_name" jdbcType="VARCHAR" property="eName" />
    <result column="e_email" jdbcType="VARCHAR" property="eEmail" />
    <result column="e_gender" jdbcType="CHAR" property="eGender" />
    <result column="d_id" jdbcType="INTEGER" property="dId" />
  </resultMap>
  <!-- 指定联合查询出的部门字段 -->
  <resultMap id="WithDeptResultMap" type="com.jiasen.bean.Employee">
    <id column="e_id" jdbcType="INTEGER" property="eId" />
    <result column="e_name" jdbcType="VARCHAR" property="eName" />
    <result column="e_email" jdbcType="VARCHAR" property="eEmail" />
    <result column="e_gender" jdbcType="CHAR" property="eGender" />
    <result column="d_id" jdbcType="INTEGER" property="dId" />
    <association javaType="com.jiasen.bean.Department" property="department">
    	<id column="dept_id" property="deptId" />
    	<result column="dept_name" property="deptName" />
    </association>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    e_id, e_name, e_email, e_gender, d_id
  </sql>
  <sql id="WithDept_Column_List">
    e.e_id, e.e_name, e.e_email, e.e_gender, e.d_id,d.dept_id,d.dept_name
  </sql>
  <!-- 
  	List&lt;Employee&gt; selectByExampleWithDept(EmployeeExample example);
    Employee selectByPrimaryKeyWithDept(Integer eId);
   -->
  <!-- 查询带部门信息 -->
  <select id="selectByExampleWithDept" resultMap="WithDeptResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="WithDept_Column_List" />
    FROM t_employee e
	LEFT JOIN t_dept d ON e.d_id = d.dept_id
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKeyWithDept" resultMap="WithDeptResultMap">
    select 
    <include refid="WithDept_Column_List" />
   	FROM t_employee e
	LEFT JOIN t_dept d ON e.d_id = d.dept_id
    where e_id = #{eId,jdbcType=INTEGER}
  </select>
  <!-- 不带部门信息 -->
  <select id="selectByExample" parameterType="com.jiasen.bean.EmployeeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_employee
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_employee
    where e_id = #{eId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_employee
    where e_id = #{eId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.jiasen.bean.EmployeeExample">
    delete from t_employee
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.jiasen.bean.Employee">
    insert into t_employee (e_id, e_name, e_email, 
      e_gender, d_id)
    values (#{eId,jdbcType=INTEGER}, #{eName,jdbcType=VARCHAR}, #{eEmail,jdbcType=VARCHAR}, 
      #{eGender,jdbcType=CHAR}, #{dId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.jiasen.bean.Employee">
    insert into t_employee
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="eId != null">
        e_id,
      </if>
      <if test="eName != null">
        e_name,
      </if>
      <if test="eEmail != null">
        e_email,
      </if>
      <if test="eGender != null">
        e_gender,
      </if>
      <if test="dId != null">
        d_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="eId != null">
        #{eId,jdbcType=INTEGER},
      </if>
      <if test="eName != null">
        #{eName,jdbcType=VARCHAR},
      </if>
      <if test="eEmail != null">
        #{eEmail,jdbcType=VARCHAR},
      </if>
      <if test="eGender != null">
        #{eGender,jdbcType=CHAR},
      </if>
      <if test="dId != null">
        #{dId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.jiasen.bean.EmployeeExample" resultType="java.lang.Long">
    select count(*) from t_employee
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_employee
    <set>
      <if test="record.eId != null">
        e_id = #{record.eId,jdbcType=INTEGER},
      </if>
      <if test="record.eName != null">
        e_name = #{record.eName,jdbcType=VARCHAR},
      </if>
      <if test="record.eEmail != null">
        e_email = #{record.eEmail,jdbcType=VARCHAR},
      </if>
      <if test="record.eGender != null">
        e_gender = #{record.eGender,jdbcType=CHAR},
      </if>
      <if test="record.dId != null">
        d_id = #{record.dId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_employee
    set e_id = #{record.eId,jdbcType=INTEGER},
      e_name = #{record.eName,jdbcType=VARCHAR},
      e_email = #{record.eEmail,jdbcType=VARCHAR},
      e_gender = #{record.eGender,jdbcType=CHAR},
      d_id = #{record.dId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.jiasen.bean.Employee">
    update t_employee
    <set>
      <if test="eName != null">
        e_name = #{eName,jdbcType=VARCHAR},
      </if>
      <if test="eEmail != null">
        e_email = #{eEmail,jdbcType=VARCHAR},
      </if>
      <if test="eGender != null">
        e_gender = #{eGender,jdbcType=CHAR},
      </if>
      <if test="dId != null">
        d_id = #{dId,jdbcType=INTEGER},
      </if>
    </set>
    where e_id = #{eId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jiasen.bean.Employee">
    update t_employee
    set e_name = #{eName,jdbcType=VARCHAR},
      e_email = #{eEmail,jdbcType=VARCHAR},
      e_gender = #{eGender,jdbcType=CHAR},
      d_id = #{dId,jdbcType=INTEGER}
    where e_id = #{eId,jdbcType=INTEGER}
  </update>
</mapper>